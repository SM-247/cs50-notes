TIME IN load represents the number of seconds that speller spends executing your implementation of load. 
TIME IN check represents the number of seconds that speller spends, in total, executing your implementation of check.
TIME IN size represents the number of seconds that speller spends executing your implementation of size.
TIME IN unload represents the number of seconds that speller spends executing your implementation of unload.
TIME IN TOTAL is the sum of those four measurements.


However, as your programs grow in size, make won’t be able to infer from context anymore how to compile your code; you’ll need to start telling make how to compile your program, particularly when they involve multiple source (i.e., .c) files, as in the case of this problem. And so we’ll utilize a Makefile, a configuration file that tells make exactly what to do. Open up Makefile, and you should see four lines:

The first line tells make to execute the subsequent lines whenever you yourself execute make speller (or just make).
The second line tells make how to compile speller.c into machine code (i.e., speller.o).
The third line tells make how to compile dictionary.c into machine code (i.e., dictionary.o).
The fourth line tells make to link speller.o and dictionary.o in a file called speller.
Be sure to compile speller by executing make speller (or just make). Executing make dictionary won’t work!
